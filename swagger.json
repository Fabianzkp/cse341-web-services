{
  "openapi": "3.0.0",
  "info": {
    "title": "CSE341 Web Services API",
    "version": "1.0.0",
    "description": "API documentation for CSE341 Web Services"
  },
  "servers": [
    {
      "url": "https://cse341-web-services-f9t7.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "apiKey",
        "description": "Enter your API key here"
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/temples": {
      "get": {
        "summary": "Get all temples",
        "description": "Fetches a list of all temples from the database.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of temples."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "post": {
        "summary": "Add a new temple",
        "description": "Creates a new temple and adds it to the database.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "location"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the temple."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the temple."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Temple successfully created."
          },
          "400": {
            "description": "Bad request."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/temples/{temple_id}": {
      "get": {
        "summary": "Get a specific temple",
        "description": "Fetches details of a temple by its ID.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "temple_id",
            "required": true,
            "description": "The ID of the temple to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Temple found."
          },
          "404": {
            "description": "Temple not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "put": {
        "summary": "Update a temple",
        "description": "Updates a temple's details.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "temple_id",
            "required": true,
            "description": "The ID of the temple to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the temple."
                  },
                  "location": {
                    "type": "string",
                    "description": "The new location of the temple."
                  },
                  "dedicated": {
                    "type": "string",
                    "description": "The dedication date."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Temple successfully updated."
          },
          "400": {
            "description": "Bad request."
          },
          "404": {
            "description": "Temple not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      },
      "delete": {
        "summary": "Delete a temple",
        "description": "Removes a temple from the database.",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "temple_id",
            "required": true,
            "description": "The ID of the temple to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Temple successfully deleted."
          },
          "404": {
            "description": "Temple not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Retrieve a list of users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "favoriteColor": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a single user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "favoriteColor": {
                    "type": "string"
                  },
                  "birthday": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "tags": []
}